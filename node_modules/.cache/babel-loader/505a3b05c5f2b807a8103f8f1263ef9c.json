{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar ApiFetcher = /*#__PURE__*/function () {\n  // eslint-disable-line no-unused-vars\n  function ApiFetcher(query, variables) {\n    _classCallCheck(this, ApiFetcher);\n\n    this.query = query;\n    this.variables = variables;\n  }\n\n  _createClass(ApiFetcher, [{\n    key: \"fetch\",\n    value: function fetch(callback) {\n      $.ajax({\n        method: \"POST\",\n        url: \"/api\",\n        contentType: \"application/json\",\n        data: JSON.stringify({\n          query: this.query,\n          variables: this.variables\n        })\n      }).done(function (data) {\n        callback(data.data);\n      });\n    }\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll(callback) {\n      this.fetch(callback);\n    }\n  }]);\n\n  return ApiFetcher;\n}();\n\nexport { ApiFetcher as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA,U;EAAa;EAChC,oBAAYC,KAAZ,EAAmBC,SAAnB,EAA8B;IAAAC;;IAC5B,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,SAAL,GAAiBA,SAAjB;EACD;;;;WAED,eAAME,QAAN,EAAgB;MACdC,CAAC,CAACC,IAAFD,CAAO;QACLE,MAAM,EAAE,MADH;QAELC,GAAG,EAAE,MAFA;QAGLC,WAAW,EAAE,kBAHR;QAILC,IAAI,EAAEC,IAAI,CAACC,SAALD,CAAe;UACnBV,KAAK,EAAE,KAAKA,KADO;UAEnBC,SAAS,EAAE,KAAKA;QAFG,CAAfS;MAJD,CAAPN,EAQGQ,IARHR,CAQQ,UAASK,IAAT,EAAe;QACrBN,QAAQ,CAACM,IAAI,CAACA,IAAN,CAARN;MATF;IAWD;;;WAED,kBAAUA,QAAV,EAAoB;MAClB,KAAKU,KAAL,CAAWV,QAAX;IACD;;;;;;SAtBkBJ,U","names":["ApiFetcher","query","variables","_classCallCheck","callback","$","ajax","method","url","contentType","data","JSON","stringify","done","fetch"],"sources":["/home/injam/.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/api/api_fetcher.js"],"sourcesContent":["export default class ApiFetcher { // eslint-disable-line no-unused-vars\n  constructor(query, variables) {\n    this.query = query;\n    this.variables = variables;\n  }\n\n  fetch(callback) {\n    $.ajax({\n      method: \"POST\",\n      url: \"/api\",\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        query: this.query,\n        variables: this.variables\n      })\n    }).done(function(data) {\n      callback(data.data);\n    });\n  }\n\n  fetchAll (callback) {\n    this.fetch(callback);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}