{"ast":null,"code":"/* eslint-disable react/jsx-no-undef */\nimport jQuery from \"jquery\";\nimport { render } from \"react-dom\";\nimport { GraphQLDocs } from \"graphql-docs\";\nimport \"stylesheets/decidim/api/docs.scss\";\n\nvar fetcherFactory = function fetcherFactory(path) {\n  return function (query) {\n    return jQuery.ajax({\n      url: path,\n      data: JSON.stringify({\n        query: query\n      }),\n      method: \"POST\",\n      contentType: \"application/json\",\n      dataType: \"json\"\n    });\n  };\n};\n\nwindow.renderDocumentation = function (path) {\n  render( /*#__PURE__*/React.createElement(GraphQLDocs, {\n    fetcher: fetcherFactory(path)\n  }), document.getElementById(\"documentation\"));\n};","map":{"version":3,"mappings":"AAAA;AAEA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAO,mCAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;EAC/B,OAAO,UAACC,KAAD,EAAW;IAChB,OAAOL,MAAM,CAACM,IAAPN,CAAY;MACjBO,GAAG,EAAEH,IADY;MAEjBI,IAAI,EAAEC,IAAI,CAACC,SAALD,CAAe;QAAEJ,KAAK,EAALA;MAAF,CAAfI,CAFW;MAGjBE,MAAM,EAAE,MAHS;MAIjBC,WAAW,EAAE,kBAJI;MAKjBC,QAAQ,EAAE;IALO,CAAZb,CAAP;EADF;AADF;;AAYAc,MAAM,CAACC,mBAAPD,GAA6B,UAACV,IAAD,EAAU;EACrCH,MAAM,eACJe,oBAACd,WAAD;IAAae,OAAO,EAAEd,cAAc,CAACC,IAAD;EAApC,EADI,EAEJc,QAAQ,CAACC,cAATD,CAAwB,eAAxBA,CAFI,CAANjB;AADF","names":["jQuery","render","GraphQLDocs","fetcherFactory","path","query","ajax","url","data","JSON","stringify","method","contentType","dataType","window","renderDocumentation","React","fetcher","document","getElementById"],"sources":["/home/injam/.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-api-0.26.2/app/packs/entrypoints/decidim_api_docs.js"],"sourcesContent":["/* eslint-disable react/jsx-no-undef */\n\nimport jQuery from \"jquery\"\nimport { render } from \"react-dom\"\nimport { GraphQLDocs } from \"graphql-docs\"\nimport \"stylesheets/decidim/api/docs.scss\"\n\nconst fetcherFactory = (path) => {\n  return (query) => {\n    return jQuery.ajax({\n      url: path,\n      data: JSON.stringify({ query }),\n      method: \"POST\",\n      contentType: \"application/json\",\n      dataType: \"json\"\n    });\n  };\n}\n\nwindow.renderDocumentation = (path) => {\n  render(\n    <GraphQLDocs fetcher={fetcherFactory(path)} />,\n    document.getElementById(\"documentation\"),\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}