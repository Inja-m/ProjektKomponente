{"ast":null,"code":"import FormStorage from \"form-storage\";\n$(function () {\n  window.DecidimAwesome = window.DecidimAwesome || {};\n\n  if (!window.DecidimAwesome.auto_save_forms) {\n    return;\n  }\n\n  var questionnaireId = window.DecidimAwesome.current_questionnaire;\n\n  if (!questionnaireId) {\n    // console.log(\"Not a questionnaire page\")\n    return;\n  }\n\n  var storeId = \"awesome_autosave:\".concat(questionnaireId);\n  var storeCheckboxesId = \"awesome_autosave:checkboxes:\".concat(questionnaireId);\n  var $form = $(\"form.answer-questionnaire\");\n\n  if (!$form.length) {\n    if (window.DecidimAwesome.questionnaire_answered) {\n      // console.log(\"Questionnaire already answered, remove any data saved\");\n      window.localStorage.removeItem(storeId);\n      window.localStorage.removeItem(storeCheckboxesId);\n    } // console.log(\"No forms here\");\n\n\n    return;\n  }\n\n  var store = new FormStorage(\"#\".concat($form.attr(\"id\")), {\n    name: storeId,\n    ignores: [// '[type=\"hidden\"]',\n    '[name=\"utf8\"]', '[name=\"authenticity_token\"]', \"[disabled]\", '[type=\"checkbox\"]' // there are problems with matrix questions\n    ]\n  });\n\n  var showMsg = function showMsg(msg) {\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var default_time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 700;\n    var time = error ? 5000 : default_time;\n    var $div = $(\"<div class=\\\"awesome_autosave-notice\".concat(error ? \" error\" : \"\", \"\\\">\").concat(msg, \"</div>\")).appendTo($form);\n    setTimeout(function () {\n      $div.fadeOut(500, function () {\n        $div.remove();\n      });\n    }, time);\n  };\n\n  if (!window.localStorage) {\n    showMsg(window.DecidimAwesome.texts.autosaved_error, true);\n    return;\n  }\n\n  if (window.localStorage.getItem(storeId)) {\n    showMsg(window.DecidimAwesome.texts.autosaved_retrieved, false, 5000);\n  } // restore if available\n\n\n  store.apply(); // restore checkboxes\n\n  try {\n    var checkboxes = JSON.parse(window.localStorage.getItem(storeCheckboxesId));\n\n    for (var id in checkboxes) {\n      $(\"#\".concat(id)).prop(\"checked\", checkboxes[id]);\n    }\n  } catch (e) {\n    console.log(\"No checkboxes found\");\n  } // this trigger the \"change\" event, it seems that it is too much\n  // $form.find('input, textarea, select').change();\n\n\n  var save = function save() {\n    store.save(); // save checkbox manually\n\n    var checkboxes = {};\n    $form.find('input[type=\"checkbox\"]').each(function (index, el) {\n      checkboxes[el.id] = el.checked;\n    });\n    window.localStorage.setItem(storeCheckboxesId, JSON.stringify(checkboxes));\n    showMsg(window.DecidimAwesome.texts.autosaved_success);\n  }; // save changes when modifications\n\n\n  $form.find(\"input, textarea, select\").on(\"change\", function () {\n    save();\n  });\n});","map":{"version":3,"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AAEAC,CAAC,CAAC,YAAM;EACNC,MAAM,CAACC,cAAPD,GAAwBA,MAAM,CAACC,cAAPD,IAAyB,EAAjDA;;EACA,IAAI,CAACA,MAAM,CAACC,cAAPD,CAAsBE,eAA3B,EAA4C;IAC1C;EACD;;EAED,IAAMC,eAAe,GAAGH,MAAM,CAACC,cAAPD,CAAsBI,qBAA9C;;EACA,IAAI,CAACD,eAAL,EAAsB;IACpB;IACA;EACD;;EAED,IAAME,OAAO,8BAAuBF,eAAvB,CAAb;EACA,IAAMG,iBAAiB,yCAAkCH,eAAlC,CAAvB;EACA,IAAMI,KAAK,GAAGR,CAAC,CAAC,2BAAD,CAAf;;EAEA,IAAI,CAACQ,KAAK,CAACC,MAAX,EAAmB;IACjB,IAAIR,MAAM,CAACC,cAAPD,CAAsBS,sBAA1B,EAAkD;MAChD;MACAT,MAAM,CAACU,YAAPV,CAAoBW,UAApBX,CAA+BK,OAA/BL;MACAA,MAAM,CAACU,YAAPV,CAAoBW,UAApBX,CAA+BM,iBAA/BN;IAJe,EAMjB;;;IACA;EACD;;EAED,IAAMY,KAAK,GAAG,IAAId,WAAJ,YAAoBS,KAAK,CAACM,IAANN,CAAW,IAAXA,CAApB,GAAwC;IACpDO,IAAI,EAAET,OAD8C;IAEpDU,OAAO,EAAE,CACP;IACA,eAFO,EAGP,6BAHO,EAIP,YAJO,EAKP,mBALO,CAKa;IALb;EAF2C,CAAxC,CAAd;;EAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAA4C;IAAA,IAAtCC,KAAsC,uEAA9B,KAA8B;IAAA,IAAvBC,YAAuB,uEAAR,GAAQ;IAC1D,IAAMC,IAAI,GAAGF,KAAK,GACd,IADc,GAEdC,YAFJ;IAGA,IAAME,IAAI,GAAGtB,CAAC,+CAAuCmB,KAAK,GACtD,QADsD,GAEtD,EAFU,gBAEHD,GAFG,YAADlB,CAGXuB,QAHWvB,CAGFQ,KAHER,CAAb;IAIAwB,UAAU,CAAC,YAAM;MACfF,IAAI,CAACG,OAALH,CAAa,GAAbA,EAAkB,YAAM;QACtBA,IAAI,CAACI,MAALJ;MADF;IADQ,GAIPD,IAJO,CAAVG;EARF;;EAeA,IAAI,CAACvB,MAAM,CAACU,YAAZ,EAA0B;IACxBM,OAAO,CAAChB,MAAM,CAACC,cAAPD,CAAsB0B,KAAtB1B,CAA4B2B,eAA7B,EAA8C,IAA9C,CAAPX;IACA;EACD;;EAED,IAAIhB,MAAM,CAACU,YAAPV,CAAoB4B,OAApB5B,CAA4BK,OAA5BL,CAAJ,EAA0C;IACxCgB,OAAO,CAAChB,MAAM,CAACC,cAAPD,CAAsB0B,KAAtB1B,CAA4B6B,mBAA7B,EAAkD,KAAlD,EAAyD,IAAzD,CAAPb;EA1DI,EA6DN;;;EACAJ,KAAK,CAACkB,KAANlB,GA9DM,CA+DN;;EACA,IAAI;IACF,IAAImB,UAAU,GAAGC,IAAI,CAACC,KAALD,CAAWhC,MAAM,CAACU,YAAPV,CAAoB4B,OAApB5B,CAA4BM,iBAA5BN,CAAXgC,CAAjB;;IACA,KAAK,IAAIE,EAAT,IAAeH,UAAf,EAA2B;MACzBhC,CAAC,YAAKmC,EAAL,EAADnC,CAAYoC,IAAZpC,CAAiB,SAAjBA,EAA4BgC,UAAU,CAACG,EAAD,CAAtCnC;IACD;EAJH,EAKE,OAAOqC,CAAP,EAAU;IACVC,OAAO,CAACC,GAARD,CAAY,qBAAZA;EAtEI,EAwEN;EACA;;;EAEA,IAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;IACjB3B,KAAK,CAAC2B,IAAN3B,GADiB,CAEjB;;IACA,IAAImB,UAAU,GAAG,EAAjB;IACAxB,KAAK,CAACiC,IAANjC,CAAW,wBAAXA,EAAqCkC,IAArClC,CAA0C,UAACmC,KAAD,EAAQC,EAAR,EAAe;MACvDZ,UAAU,CAACY,EAAE,CAACT,EAAJ,CAAVH,GAAoBY,EAAE,CAACC,OAAvBb;IADF;IAGA/B,MAAM,CAACU,YAAPV,CAAoB6C,OAApB7C,CAA4BM,iBAA5BN,EAA+CgC,IAAI,CAACc,SAALd,CAAeD,UAAfC,CAA/ChC;IACAgB,OAAO,CAAChB,MAAM,CAACC,cAAPD,CAAsB0B,KAAtB1B,CAA4B+C,iBAA7B,CAAP/B;EARF,EA3EM,CAsFN;;;EACAT,KAAK,CAACiC,IAANjC,CAAW,yBAAXA,EAAsCyC,EAAtCzC,CAAyC,QAAzCA,EAAmD,YAAM;IACvDgC,IAAI;EADN;AAvFD,EAADxC","names":["FormStorage","$","window","DecidimAwesome","auto_save_forms","questionnaireId","current_questionnaire","storeId","storeCheckboxesId","$form","length","questionnaire_answered","localStorage","removeItem","store","attr","name","ignores","showMsg","msg","error","default_time","time","$div","appendTo","setTimeout","fadeOut","remove","texts","autosaved_error","getItem","autosaved_retrieved","apply","checkboxes","JSON","parse","id","prop","e","console","log","save","find","each","index","el","checked","setItem","stringify","autosaved_success","on"],"sources":["/home/injam/.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/forms/autosave.js"],"sourcesContent":["import FormStorage from \"form-storage\"\n\n$(() => {\n  window.DecidimAwesome = window.DecidimAwesome || {};\n  if (!window.DecidimAwesome.auto_save_forms) {\n    return;\n  }\n\n  const questionnaireId = window.DecidimAwesome.current_questionnaire;\n  if (!questionnaireId) {\n    // console.log(\"Not a questionnaire page\")\n    return;\n  }\n\n  const storeId = `awesome_autosave:${questionnaireId}`;\n  const storeCheckboxesId = `awesome_autosave:checkboxes:${questionnaireId}`;\n  const $form = $(\"form.answer-questionnaire\");\n\n  if (!$form.length) {\n    if (window.DecidimAwesome.questionnaire_answered) {\n      // console.log(\"Questionnaire already answered, remove any data saved\");\n      window.localStorage.removeItem(storeId);\n      window.localStorage.removeItem(storeCheckboxesId);\n    }\n    // console.log(\"No forms here\");\n    return;\n  }\n\n  const store = new FormStorage(`#${$form.attr(\"id\")}`, {\n    name: storeId,\n    ignores: [\n      // '[type=\"hidden\"]',\n      '[name=\"utf8\"]',\n      '[name=\"authenticity_token\"]',\n      \"[disabled]\",\n      '[type=\"checkbox\"]' // there are problems with matrix questions\n    ]\n  });\n\n  const showMsg = (msg, error = false, default_time = 700) => {\n    const time = error\n      ? 5000\n      : default_time;\n    const $div = $(`<div class=\"awesome_autosave-notice${error\n      ? \" error\"\n      : \"\"}\">${msg}</div>`).\n      appendTo($form);\n    setTimeout(() => {\n      $div.fadeOut(500, () => {\n        $div.remove();\n      });\n    }, time);\n  };\n\n  if (!window.localStorage) {\n    showMsg(window.DecidimAwesome.texts.autosaved_error, true);\n    return;\n  }\n\n  if (window.localStorage.getItem(storeId)) {\n    showMsg(window.DecidimAwesome.texts.autosaved_retrieved, false, 5000);\n  }\n\n  // restore if available\n  store.apply();\n  // restore checkboxes\n  try {\n    let checkboxes = JSON.parse(window.localStorage.getItem(storeCheckboxesId));\n    for (let id in checkboxes) {\n      $(`#${id}`).prop(\"checked\", checkboxes[id]);\n    }\n  } catch (e) {\n    console.log(\"No checkboxes found\");\n  }\n  // this trigger the \"change\" event, it seems that it is too much\n  // $form.find('input, textarea, select').change();\n\n  const save = () => {\n    store.save();\n    // save checkbox manually\n    let checkboxes = {};\n    $form.find('input[type=\"checkbox\"]').each((index, el) => {\n      checkboxes[el.id] = el.checked;\n    });\n    window.localStorage.setItem(storeCheckboxesId, JSON.stringify(checkboxes));\n    showMsg(window.DecidimAwesome.texts.autosaved_success);\n  };\n\n  // save changes when modifications\n  $form.find(\"input, textarea, select\").on(\"change\", () => {\n    save();\n  });\n});\n"]},"metadata":{},"sourceType":"module"}