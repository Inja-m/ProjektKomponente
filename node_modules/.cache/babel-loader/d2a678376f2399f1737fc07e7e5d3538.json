{"ast":null,"code":"import \"select2\";\nimport \"stylesheets/decidim/decidim_awesome/admin/user_picker.scss\";\n$(function () {\n  $(\"select.multiusers-select\").each(function () {\n    var url = $(this).attr(\"data-url\");\n    $(this).select2({\n      ajax: {\n        url: url,\n        delay: 100,\n        dataType: \"json\",\n        processResults: function processResults(data) {\n          return {\n            results: data\n          };\n        }\n      },\n      escapeMarkup: function escapeMarkup(markup) {\n        return markup;\n      },\n      templateSelection: function templateSelection(item) {\n        return \"\".concat(item.text);\n      },\n      minimumInputLength: 1,\n      theme: \"foundation\"\n    });\n  });\n});","map":{"version":3,"mappings":"AAAA,OAAO,SAAP;AACA,OAAO,4DAAP;AAEAA,CAAC,CAAC,YAAM;EACNA,CAAC,CAAC,0BAAD,CAADA,CAA8BC,IAA9BD,CAAmC,YAAW;IAC5C,IAAME,GAAG,GAAGF,CAAC,CAAC,IAAD,CAADA,CAAQG,IAARH,CAAa,UAAbA,CAAZ;IACAA,CAAC,CAAC,IAAD,CAADA,CAAQI,OAARJ,CAAgB;MACdK,IAAI,EAAE;QACJH,GAAG,EAAEA,GADD;QAEJI,KAAK,EAAE,GAFH;QAGJC,QAAQ,EAAE,MAHN;QAIJC,cAAc,EAAE,wBAACC,IAAD,EAAU;UACxB,OAAO;YACLC,OAAO,EAAED;UADJ,CAAP;QAGD;MARG,CADQ;MAWdE,YAAY,EAAE,sBAACC,MAAD;QAAA,OAAYA,MAAZ;MAXA;MAYdC,iBAAiB,EAAE,2BAACC,IAAD;QAAA,iBAAaA,IAAI,CAACC,IAAlB;MAZL;MAadC,kBAAkB,EAAE,CAbN;MAcdC,KAAK,EAAE;IAdO,CAAhBjB;EAFF;AADD,EAADA","names":["$","each","url","attr","select2","ajax","delay","dataType","processResults","data","results","escapeMarkup","markup","templateSelection","item","text","minimumInputLength","theme"],"sources":["/home/injam/.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/admin/user_picker.js"],"sourcesContent":["import \"select2\"\nimport \"stylesheets/decidim/decidim_awesome/admin/user_picker.scss\"\n\n$(() => {\n  $(\"select.multiusers-select\").each(function() {\n    const url = $(this).attr(\"data-url\");\n    $(this).select2({\n      ajax: {\n        url: url,\n        delay: 100,\n        dataType: \"json\",\n        processResults: (data) => {\n          return {\n            results: data\n          }\n        }\n      },\n      escapeMarkup: (markup) => markup,\n      templateSelection: (item) => `${item.text}`,\n      minimumInputLength: 1,\n      theme: \"foundation\"\n    });\n  });\n});\n"]},"metadata":{},"sourceType":"module"}