{"ast":null,"code":"$(function () {\n  var $modal = $(\"#constraintsModal\");\n\n  if (!$modal.length) {\n    return;\n  }\n\n  $(\".decidim_awesome-form\").on(\"click\", \".constraints-editor .add-condition,.constraints-editor .edit-condition\", function (e) {\n    e.preventDefault();\n    var $this = $(e.target);\n    var url = $this.attr(\"href\");\n    var $callout = $this.closest(\".constraints-editor\").find(\".callout\");\n    $callout.hide();\n    $callout.removeClass(\"alert success\");\n    $modal.find(\".modal-content\").html(\"\");\n    $modal.addClass(\"loading\");\n    $modal.data(\"url\", url);\n    $modal.foundation(\"open\");\n    $modal.find(\".modal-content\").load(url, function () {\n      $modal.removeClass(\"loading\");\n    });\n  }); // Custom event listener to reload the modal if needed\n\n  document.body.addEventListener(\"constraint:change\", function (e) {\n    var vars = e.detail.map(function (setting) {\n      return \"\".concat(setting.key, \"=\").concat(setting.value);\n    });\n    var url = \"\".concat($modal.data(\"url\"), \"&\").concat(vars.join(\"&\")); // console.log(\"constraint:change vars:\", vars, \"url:\", url)\n\n    $modal.addClass(\"loading\");\n    $modal.find(\".modal-content\").load(url, function () {\n      $modal.removeClass(\"loading\");\n    });\n  }); // Rails AJAX events\n\n  document.body.addEventListener(\"ajax:error\", function (responseText) {\n    // console.log(\"ajax:error\", responseText)\n    var $container = $(\".constraints-editor[data-key=\\\"\".concat(responseText.detail[0].key, \"\\\"]\"));\n    var $callout = $container.find(\".callout\");\n    $callout.show();\n    $callout.contents(\"p\").html(\"\".concat(responseText.detail[0].message, \": <strong>\").concat(responseText.detail[0].error, \"</strong>\"));\n    $callout.addClass(\"alert\");\n  });\n  document.body.addEventListener(\"ajax:success\", function (responseText) {\n    // console.log(\"ajax:success\", responseText)\n    var $container = $(\".constraints-editor[data-key=\\\"\".concat(responseText.detail[0].key, \"\\\"]\"));\n    var $callout = $container.find(\".callout\");\n    $modal.foundation(\"close\");\n    $callout.show();\n    $callout.contents(\"p\").html(responseText.detail[0].message);\n    $callout.addClass(\"success\"); // reconstruct list\n\n    $container.replaceWith(responseText.detail[0].html);\n  });\n});","map":{"version":3,"mappings":"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","names":["$","$modal","length","on","e","preventDefault","$this","target","url","attr","$callout","closest","find","hide","removeClass","html","addClass","data","foundation","load","document","body","addEventListener","vars","detail","map","setting","key","value","join","responseText","$container","show","contents","message","error","replaceWith"],"sources":["/home/injam/.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/admin/constraints.js"],"sourcesContent":["$(() => {\n  const $modal = $(\"#constraintsModal\");\n  if (!$modal.length) {\n    return;\n  }\n\n  $(\".decidim_awesome-form\").on(\"click\", \".constraints-editor .add-condition,.constraints-editor .edit-condition\", (e) => {\n    e.preventDefault();\n    const $this = $(e.target)\n    const url = $this.attr(\"href\");\n    const $callout = $this.closest(\".constraints-editor\").find(\".callout\");\n    $callout.hide();\n    $callout.removeClass(\"alert success\");\n    $modal.find(\".modal-content\").html(\"\");\n    $modal.addClass(\"loading\");\n    $modal.data(\"url\", url);\n    $modal.foundation(\"open\");\n    $modal.find(\".modal-content\").load(url, () => {\n      $modal.removeClass(\"loading\");\n    });\n  });\n\n  // Custom event listener to reload the modal if needed\n  document.body.addEventListener(\"constraint:change\", (e) => {\n    const vars = e.detail.map((setting) => `${setting.key}=${setting.value}`);\n    const url = `${$modal.data(\"url\")}&${vars.join(\"&\")}`;\n    // console.log(\"constraint:change vars:\", vars, \"url:\", url)\n    $modal.addClass(\"loading\");\n    $modal.find(\".modal-content\").load(url, () => {\n      $modal.removeClass(\"loading\");\n    });\n  });\n\n  // Rails AJAX events\n  document.body.addEventListener(\"ajax:error\", (responseText) => {\n    // console.log(\"ajax:error\", responseText)\n    const $container = $(`.constraints-editor[data-key=\"${responseText.detail[0].key}\"]`)\n    const $callout = $container.find(\".callout\");\n    $callout.show();\n    $callout.contents(\"p\").html(`${responseText.detail[0].message}: <strong>${responseText.detail[0].error}</strong>`);\n    $callout.addClass(\"alert\");\n  });\n\n  document.body.addEventListener(\"ajax:success\", (responseText) => {\n    // console.log(\"ajax:success\", responseText)\n    const $container = $(`.constraints-editor[data-key=\"${responseText.detail[0].key}\"]`)\n    const $callout = $container.find(\".callout\");\n    $modal.foundation(\"close\");\n    $callout.show();\n    $callout.contents(\"p\").html(responseText.detail[0].message);\n    $callout.addClass(\"success\");\n    // reconstruct list\n    $container.replaceWith(responseText.detail[0].html);\n  });\n});\n"]},"metadata":{},"sourceType":"module"}